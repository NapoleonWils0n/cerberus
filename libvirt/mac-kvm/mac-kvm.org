#+STARTUP: content
* mac kvm

https://www.youtube.com/c/HikmatEUstad/videos

https://www.nicksherlock.com/2021/10/installing-macos-12-monterey-on-proxmox-7/#more-1167

https://github.com/kholia/OSX-KVM

** convert a macos installer to a iso file

In this particular walkthrough, we’ll be converting a MacOS Monterey installer application into an ISO file. You can use the same steps to create an ISO file from practically any other MacOS Installer with createinstallmedia present however, simply by replacing the file names where appropriate.

*** how to Create a MacOS Monterey ISO File from an Installer

This process will take an installer for macOS and create an ISO file from it which can be booted or used as a typical disk image file. 

First, download MacOS Monterey installer from the Mac App Store
When the “Install MacOS Monterey.app” application is fully downloaded and within the /Applications folder, proceed

Next, open the Terminal application

*** Create a disk image DMG file buy issuing the following command:

#+begin_src sh
hdiutil create -o Monterey -size 16g -volname Monterey -layout SPUD -fs HFS+J
#+end_src

*** mount the created DMG disk image as follows:

#+begin_src sh
hdiutil attach Monterey.dmg -noverify -mountpoint /Volumes/Monterey
#+end_src

*** createinstallmedia

Next we will use createinstallmedia to create the macOS installer application on the mounted volume:

#+begin_src sh
sudo /Applications/Install\ macOS\ Monterey.app/Contents/Resources/createinstallmedia --volume /Volumes/Monterey --nointeraction
#+end_src

*** unmount volume

When createinstallmedia has finished, next you can unmount the volume you just created:

#+begin_src sh
hdiutil detach /volumes/Install\ macOS\ Monterey
#+end_src

*** convert the dmg

Now we convert the DMG disk image file to an ISO disk image file (technically a CDR file but it’s the same as an iso)

#+begin_src sh
hdiutil convert Monterey.dmg -format UDTO -o Monterey.cdr
#+end_src

*** rename the cdr file to iso

Finally, we rename the CDR file extension to ISO to convert the CDR to ISO:

#+begin_src sh
mv Monterey.cdr Monterey.iso
#+end_src

** kholia OSX-KVM

KVM may need the following tweak on the host machine to work.

#+begin_src sh
echo 1 | sudo tee /sys/module/kvm/parameters/ignore_msrs
#+end_src

To make this change permanent, you may use the following command.

#+begin_src sh
sudo cp kvm.conf /etc/modprobe.d/kvm.conf  # for intel boxes only
#+end_src

*** Install QEMU and other packages.

#+begin_src sh
sudo apt install qemu uml-utilities virt-manager git wget libguestfs-tools p7zip-full make -y
#+end_src

if you have virt-manager installed you may only need the following packages

#+begin_src sh
sudo apt install uml-utilities libguestfs-tools p7zip-full
#+end_src

*** Add user to the kvm and libvirt groups (might be needed).

#+begin_src sh
sudo usermod -aG kvm $(whoami)
sudo usermod -aG libvirt $(whoami)
#+end_src

Note: Re-login after executing this command.

*** Clone this repository on your QEMU system.

Files from this repository are used in the following steps.

#+begin_src sh
git clone --depth 1 --recursive https://github.com/kholia/OSX-KVM.git
#+end_src

move the OSX-KVM git repo to ~/libvirt

#+begin_src sh
mv OSX-KVM ~/libvirt
#+end_src

*** Create a virtual HDD image where macOS will be installed.

If you change the name of the disk image from mac_hdd.img to something else, the boot scripts will need to be updated to point to the new image name.

#+begin_src sh
qemu-img create -f qcow2 mac_hdd_ng.img 128G
#+end_src

move the mac_hdd_ng.img file to libvirt images

#+begin_src sh
mv mac_hdd_ng.img ~/libvirt/images
#+end_src

*** edit the ~/libvirt/OSX-KVM/OpenCore-Boot.sh


#+begin_src sh
vi ~/libvirt/OSX-KVM/OpenCore-Boot.sh
#+end_src

change the following 2 lines 

#+begin_src sh
-drive id=InstallMedia,if=none,file="$REPO_PATH/BaseSystem.img",format=raw
-drive id=MacHDD,if=none,file="$REPO_PATH/mac_hdd_ng.img",format=qcow2
#+end_src

to look like this
so we add the path to the Monterey.iso file and the mac_hdd_ng.img file

#+begin_src sh
-drive id=InstallMedia,if=none,file="$REPO_PATH/../images/Monterey.iso",format=raw
-drive id=MacHDD,if=none,file="$REPO_PATH/../images/mac_hdd_ng.img",format=qcow2
#+end_src

change the ram

#+begin_src sh
ALLOCATED_RAM="8196" # MiB
#+end_src

change readonly to from true 

#+begin_src sh
-drive if=pflash,format=raw,readonly=true,file="$REPO_PATH/$OVMF_DIR/OVMF_CODE.fd"
#+end_src

to on

#+begin_src sh
-drive if=pflash,format=raw,readonly=on,file="$REPO_PATH/$OVMF_DIR/OVMF_CODE.fd"
#+end_src

the file should look likes this


#+begin_src sh
#!/usr/bin/env bash

# Special thanks to:
# https://github.com/Leoyzen/KVM-Opencore
# https://github.com/thenickdude/KVM-Opencore/
# https://github.com/qemu/qemu/blob/master/docs/usb2.txt
#
# qemu-img create -f qcow2 mac_hdd_ng.img 128G
#
# echo 1 > /sys/module/kvm/parameters/ignore_msrs (this is required)

############################################################################
# NOTE: Tweak the "MY_OPTIONS" line in case you are having booting problems!
############################################################################

MY_OPTIONS="+ssse3,+sse4.2,+popcnt,+avx,+aes,+xsave,+xsaveopt,check"

# This script works for Big Sur, Catalina, Mojave, and High Sierra. Tested with
# macOS 10.15.6, macOS 10.14.6, and macOS 10.13.6

ALLOCATED_RAM="8196" # MiB
CPU_SOCKETS="1"
CPU_CORES="2"
CPU_THREADS="4"

REPO_PATH="."
OVMF_DIR="."

# This causes high cpu usage on the *host* side
# qemu-system-x86_64 -enable-kvm -m 3072 -cpu Penryn,vendor=GenuineIntel,+invtsc,vmware-cpuid-freq=on,hypervisor=off,vmx=on,kvm=off,$MY_OPTIONS\

# shellcheck disable=SC2054
args=(
  -enable-kvm -m "$ALLOCATED_RAM" -cpu Penryn,kvm=on,vendor=GenuineIntel,+invtsc,vmware-cpuid-freq=on,"$MY_OPTIONS"
  -machine q35
  -usb -device usb-kbd -device usb-tablet
  -smp "$CPU_THREADS",cores="$CPU_CORES",sockets="$CPU_SOCKETS"
  -device usb-ehci,id=ehci
  # -device usb-kbd,bus=ehci.0
  # -device usb-mouse,bus=ehci.0
  # -device nec-usb-xhci,id=xhci
  -device isa-applesmc,osk="ourhardworkbythesewordsguardedpleasedontsteal(c)AppleComputerInc"
  -drive if=pflash,format=raw,readonly=true,file="$REPO_PATH/$OVMF_DIR/OVMF_CODE.fd"
  -drive if=pflash,format=raw,file="$REPO_PATH/$OVMF_DIR/OVMF_VARS-1024x768.fd"
  -smbios type=2
  -device ich9-intel-hda -device hda-duplex
  -device ich9-ahci,id=sata
  -drive id=OpenCoreBoot,if=none,snapshot=on,format=qcow2,file="$REPO_PATH/OpenCore/OpenCore.qcow2"
  -device ide-hd,bus=sata.2,drive=OpenCoreBoot
  -device ide-hd,bus=sata.3,drive=InstallMedia
  -drive id=InstallMedia,if=none,file="$REPO_PATH/../images/Monterey.iso",format=raw
  -drive id=MacHDD,if=none,file="$REPO_PATH/../images/mac_hdd_ng.img",format=qcow2
  -device ide-hd,bus=sata.4,drive=MacHDD
  # -netdev tap,id=net0,ifname=tap0,script=no,downscript=no -device vmxnet3,netdev=net0,id=net0,mac=52:54:00:c9:18:27
  -netdev user,id=net0 -device vmxnet3,netdev=net0,id=net0,mac=52:54:00:c9:18:27
  -monitor stdio
  -device VGA,vgamem_mb=128
)

qemu-system-x86_64 "${args[@]}"
#+end_src

*** run the OpenCore-Boot.sh

#+begin_src sh
./OpenCore-Boot.sh
#+end_src

select install

mac osx recovery

open disk utility

Name: Monterey Hard Disk
Format: APFS
Scheme GUID PArtition Map

close disk utility

select install mac osx and continue

Select macOS Installer

Select Monterey Hard Disk

Run the installer

*** escape to bios to fix the display

boot up the mac kvm and press escape to boot into the bios
where you can set the display

*** change the vga driver to virtio

open the mac kvm setting in virt manager and change the vga driver to virtio,
and dont enable 3d accleration
