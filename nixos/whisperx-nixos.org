#+STARTUP: content
* whisperx
** create the directory structure

#+begin_src sh
mkdir -p "${HOME}"/nix/whisperx
#+end_src

#+begin_src sh
cd "${HOME}"/nix/whisperx
#+end_src

** shell.nix

#+begin_src sh
vi shell.nix
#+end_src

#+begin_src nix
{ pkgs }:

pkgs.mkShell {
  buildInputs = [
    pkgs.python311
    pkgs.python311Packages.pip
    pkgs.python311Packages.pytorch-bin # Keep PyTorch from Nixpkgs
    pkgs.python311Packages.numpy
    pkgs.python311Packages.scipy
    pkgs.ffmpeg
    pkgs.rustc
    pkgs.cargo
    pkgs.python311Packages.numba
    pkgs.python311Packages.tqdm
    pkgs.python311Packages.soundfile
    pkgs.python311Packages.typing-extensions
    pkgs.python311Packages.sentencepiece
    pkgs.python311Packages.webrtcvad
  ];
}
#+end_src

** enter the nix shell

#+begin_src sh
export NIXPKGS_ALLOW_UNFREE=1
nix-shell --pure --impure --arg pkgs '(import <nixpkgs> {})'
#+end_src

** pip install

#+begin_src sh
python3 -m venv venv
source venv/bin/activate
#+end_src

#+begin_src sh
pip install torchaudio
#+end_src

#+begin_src sh
pip install whisperx
pip install faster-whisper stable-ts numpy scipy ffmpeg-python numba tqdm soundfile typing-extensions sentencepiece webrtcvad
#+end_src

** run whisperx

you can now use whisperx

** enter the nix shell

when you want to use whisperx run the following commands

cd into the whisperx directory

#+begin_src sh
cd ~/nix/whisperx
#+end_src

run nix-shell

#+begin_src sh
nix-shell
#+end_src

you can then run whisperx

** exit the nix-shell

#+begin_src sh
exit
#+end_src
