#+STARTUP: content
* debian install
** resources

[[https://www.debian.org/]]

[[https://www.debian.org/releases/stable/i386/]]

** iso download

#+begin_src sh
wget -c 'https://cdimage.debian.org/debian-cd/current/amd64/iso-cd/debian-12.10.0-amd64-netinst.iso'
#+end_src

** Preparing Files for USB Memory Stick Booting

run lsblk and find the usb drive you are going to use

#+begin_src sh
lsblk
#+end_src

#+begin_example
NAME                                                                      MAJ:MIN RM   SIZE RO TYPE  MOUNTPOINTS
sda                                                                         8:0    1  28.9G  0 disk
├─sda1                                                                      8:1    1   1.2G  0 part  /run/media/djwilcox/nixos-minimal-24.11-x86_64
└─sda2                                                                      8:2    1     3M  0 part
nvme0n1                                                                   259:0    0 953.9G  0 disk
├─nvme0n1p1                                                               259:1    0     1G  0 part  /boot
├─nvme0n1p2                                                               259:2    0     8G  0 part
│ └─dev-disk-byx2did-nvmex2dMicron_2300_NVMe_1024GB_________20342A09973Bx2dpart2
│                                                                         254:0    0     8G  0 crypt [SWAP]
└─nvme0n1p3                                                               259:3    0 944.9G  0 part
#+end_example

Make sure all partitions on the device are properly unmounted.
Replace sda with your device 

#+begin_src sh
sudo umount /dev/sda
#+end_src

#+begin_src sh
sudo cp debian-12.10.0-amd64-netinst.iso /dev/sda
#+end_src

#+begin_src sh
sudo sync
#+end_src

** boot from usb

plug the usb drive in and turn on the computer

on the mac you need to press alt and then select the efi partition

** partition

create a seperate /home partition

** software selection

press space to deselect

#+begin_example
Debian desktop environment
Gnome
#+end_example

but the leave the 

#+begin_example
standard system utilities
#+end_example

selected and press continue

** gnome

switch to root as sudo isnt installed yet

#+begin_src sh
su -
#+end_src

#+begin_src sh
apt update
apt install gnome-core
#+end_src

#+begin_src sh
reboot
#+end_src

** keymap

in the settings, keyboard change the keymap to

#+begin_example
English (UK, Macintosh)
#+end_example

** wayland xkb

Install Gnome Tweaks and then open the Keyboard and Mouse settings, 
click the Additional Layout Options Button, at the bottom of the list you should see custom options

switch to root as sudo isnt installed yet

#+begin_src sh
su -
#+end_src

#+begin_src sh
apt install gnome-tweaks
#+end_src

your custom settings will be listed under this menu and you can enable them by clicking the checlbox next to their name

create the ~/.config/xkb directory and sub directories

#+begin_src sh
mkdir -p ~/.config/xkb/{symbols,rules,compat,keycodes,types}
#+end_src

** console keymap

switch to root

#+begin_src sh
su -
#+end_src

edit the keyboard file

#+begin_src sh
vi /etc/default/keyboard
#+end_src

#+begin_src sh
XKBLAYOUT="gb"
XKBVARIANT="mac"
#+end_src

update-initramfs

#+begin_src sh
update-initramfs -u
#+end_src

** missing firmware

missing firmware on Mabook Pro retina 2015

#+begin_example
brcm/brcmfmac43602-pcie.Apple
brcm/brcmfmac43602-pcie.clm_blob
brcm/brcmfmac43602-pcie.txt
#+end_example

#+begin_example
firmware-brcm80211
#+end_example

should already be installed, if not install it

switch to root as sudo isnt installed yet

#+begin_src sh
su -
#+end_src

#+begin_src sh
apt install firmware-brcm80211
#+end_src

** opendoas

switch to root

#+begin_src sh
su -
#+end_src

#+begin_src sh
apt install opendoas
#+end_src

doas.conf

** zsh 

#+begin_src sh
doas apt install zsh zsh-syntax-highlighting
#+end_src

change shell as your regular user, not as root

#+begin_src sh
chsh -s /usr/bin/zsh
#+end_src

enter you admin password

log out and back in again

** alacritty

#+begin_src sh
doas apt install alacritty
#+end_src

create the alacritty directory

#+begin_src sh
mkdir -p ~/.config/alacritty
#+end_src

copy the default alacritty.yml file into the directory

#+begin_src sh
cp /usr/share/doc/alacritty/examples/alacritty.yml
#+end_src

** backports

#+begin_src sh
doas vi /etc/apt/sources.list
#+end_src

#+begin_src conf
# Add this line for backports:
deb http://deb.debian.org/debian bookworm-backports main contrib non-free-firmware
deb-src http://deb.debian.org/debian bookworm-backports main contrib non-free-firmware
#+end_src

#+begin_src sh
doas apt update
#+end_src

** emacs

search for emacs-pgtk in backports

#+begin_src sh
apt search emacs-pgtk -t bookworm-backports
#+end_src

install emacs

#+begin_src sh
doas apt install emacs-pgtk -t bookworm-backports
#+end_src

** fonts

#+begin_src sh
doas apt install fonts-firacode
#+end_src

download the latest version of the Iosevka font

#+begin_example
PkgTTC-Iosevka-33.2.2.zip 
#+end_example

[[https://github.com/be5invis/Iosevka/releases]]

unzip the zip file

#+begin_src sh
unzip PkgTTC-Iosevka-33.2.2.zip 
#+end_src

move the fonts into place

#+begin_src sh
mv Iosevka-*.ttc ~/.local/share/fonts
#+end_src

update the font cache

#+begin_src sh
fc-cache -fv
#+end_src

** general packages

#+begin_src sh
doas apt install rsync git wl-clipboard tmux abook ffmpeg aria2 bc curl dconf-editor fd-find gnome-tweaks
#+end_src
