{
  "name": "csv-http-no-summary-gemini-csv",
  "nodes": [
    {
      "parameters": {
        "binaryPropertyName": "data0",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -960,
        496
      ],
      "id": "cce7133f-8964-4f54-ad6a-221e82fd31ac",
      "name": "Extract from csv"
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -448,
        192
      ],
      "id": "a12ea77a-4695-46de-a6db-7d866ac9a1da",
      "name": "HTTP Request",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -672,
        480
      ],
      "id": "c3f83317-d9be-45f9-8160-53c6d1b6ffa1",
      "name": "Loop Over Items",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Perform the following steps on the provided HTML content:\n1. Extract the main body text, excluding all navigation, footers, headers, ads, image alt text, figcaption text and other irrelevant elements.\n2. Your output must be ONLY the text from step 2. Do not include any titles, introductions, or concluding phrases.\n\nHTML content:\n{{ $json.bodyText }}\n",
        "options": {
          "systemMessage": "You are a text processing machine. You do not have a persona and are not conversational. Your task is to follow the user's instructions precisely, without deviation, and provide ONLY the requested output. You must never provide commentary or extra information."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        224,
        0
      ],
      "id": "8fe42267-0951-4d1f-875e-962a3960f0ba",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "extractionValues": {
          "values": [
            {
              "key": "title",
              "cssSelector": "title"
            },
            {
              "key": "bodyText",
              "cssSelector": "body"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        0,
        0
      ],
      "id": "b8ef014f-e8b1-4a09-b181-34ed02bf93bd",
      "name": "extract html",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "418644c8-dbc8-4b0f-a8e3-ede524853dae",
              "name": "title",
              "value": "={{ $('Loop Over Items').item.json.title }}",
              "type": "string"
            },
            {
              "id": "71547689-c0d8-44b7-a7bc-24818dea0991",
              "name": "url",
              "value": "={{ $('Loop Over Items').item.json.url }}",
              "type": "string"
            },
            {
              "id": "63f247f4-0feb-42f6-8854-39f5740f15cc",
              "name": "content",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        576,
        0
      ],
      "id": "f250e411-4fad-428d-bc35-0536aabce6a0",
      "name": "set output"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/mnt/data/csv-http-no-summary-gemini-csv-{{ (new Date()).toISOString().replace('T', '-').replace(/:/g, '-').replace(/\\./g, '_').slice(0, 19) + '.csv' }}",
        "dataPropertyName": "=data",
        "options": {
          "append": true
        }
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -64,
        464
      ],
      "id": "3a8132b0-6b30-413e-8458-c4a9302d90b6",
      "name": "write to file"
    },
    {
      "parameters": {
        "options": {
          "delimiter": ",",
          "headerRow": true
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -240,
        464
      ],
      "id": "cbfb4b44-61b8-474b-a80f-55f2f39e6f1d",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "options": {
          "temperature": 0
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        240,
        224
      ],
      "id": "f89626b5-2992-451c-9351-9d7918e3cd75",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "znmwPMJRL7xlK8cc",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f79209ef-c195-4d50-86bd-403a3912d56d",
              "leftValue": "={{ $json.headers['content-type'] }}",
              "rightValue": "text/html",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -224,
        96
      ],
      "id": "78d89110-ba05-4e8b-a067-f2685124e481",
      "name": "If content type"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -224,
        288
      ],
      "id": "cb78ad9f-a778-4ca9-83e3-6ebd500b7d9b",
      "name": "status error"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        0,
        192
      ],
      "id": "85d9a19b-f4bd-4cb4-9f25-5d9b4e8631fd",
      "name": "wrong content type"
    },
    {
      "parameters": {
        "options": {
          "allowFileUploads": true,
          "allowedFilesMimeTypes": "text/csv"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        -1168,
        496
      ],
      "id": "4609e5aa-c676-49d6-91ab-3a62262f6504",
      "name": "upload file",
      "webhookId": "3dd14dea-f06d-4f5f-8d49-91c19670038d",
      "notesInFlow": false
    },
    {
      "parameters": {
        "content": "## Click the paper clip icon in the chat to upload a csv file with urls, type start and press return to make http requests and sumarize Gemini save the results to a csv file",
        "height": 144,
        "width": 624
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1392,
        320
      ],
      "id": "46141c2c-b689-4db0-9b78-2f440582cfca",
      "name": "Sticky Note"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        384,
        224
      ],
      "id": "1dc5dc13-66b0-40db-bfe4-6f7a0cd500bb",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "CC6D1SBjVBR8QA99",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        832,
        32
      ],
      "id": "e7b8703f-b3aa-4d2a-bceb-1c70f726730e",
      "name": "Accumulate Data"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "08f577dd-e77e-4643-849f-b54e31db9a97",
              "name": "title",
              "value": "={{ $('Loop Over Items').item.json.title }}",
              "type": "string"
            },
            {
              "id": "6097d43f-46bd-4eae-ab8a-435c92f8c954",
              "name": "url",
              "value": "={{ $('Loop Over Items').item.json.url }}",
              "type": "string"
            },
            {
              "id": "36e5cc25-361e-4e6d-9cb8-a8c595a2244f",
              "name": "content",
              "value": "={{ $json.content }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -464,
        480
      ],
      "id": "dbb2d9eb-6781-4185-b888-78d06dcc9bf7",
      "name": "filter csv"
    }
  ],
  "pinData": {},
  "connections": {
    "Extract from csv": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "If content type",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "status error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "filter csv",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "set output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "extract html": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set output": {
      "main": [
        [
          {
            "node": "Accumulate Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "write to file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "write to file": {
      "main": [
        []
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "status error": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If content type": {
      "main": [
        [
          {
            "node": "extract html",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "wrong content type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "wrong content type": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "upload file": {
      "main": [
        [
          {
            "node": "Extract from csv",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Accumulate Data": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "filter csv": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "7fba61e1-6937-47c0-93d4-ee655e48bb08",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ee718081dceace9a4bccc1cc08d3d8ae41f44d3a86e1399dd1a159c3f3ae7e8e"
  },
  "id": "lolWcaf1t2CSv3Rn",
  "tags": []
}