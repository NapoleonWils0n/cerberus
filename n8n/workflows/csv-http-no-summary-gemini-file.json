{
  "name": "csv-http-no-summary-gemini-file",
  "nodes": [
    {
      "parameters": {
        "binaryPropertyName": "data0",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -960,
        496
      ],
      "id": "0373937d-eca2-4938-b825-79de7b79bdd7",
      "name": "Extract from csv"
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -448,
        192
      ],
      "id": "efa12ae4-f044-4f3c-ad4c-7c30157a38dd",
      "name": "HTTP Request",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -672,
        480
      ],
      "id": "8f0b694e-1547-4929-8a79-46ce2308f8af",
      "name": "Loop Over Items",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Perform the following steps on the provided HTML content:\n1. Extract the main body text, excluding all navigation, footers, headers, ads, image alt text, figcaption text and other irrelevant elements.\n2. Your output must be ONLY the text from step 2. Do not include any titles, introductions, or concluding phrases.\n\nHTML content:\n{{ $json.bodyText }}",
        "options": {
          "systemMessage": "You are a text processing machine. You do not have a persona and are not conversational. Your task is to follow the user's instructions precisely, without deviation, and provide ONLY the requested output. You must never provide commentary or extra information."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        224,
        0
      ],
      "id": "08d80c3a-1510-4a2b-a4a3-55bca56ab8b1",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "extractionValues": {
          "values": [
            {
              "key": "title",
              "cssSelector": "title"
            },
            {
              "key": "bodyText",
              "cssSelector": "body"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        0,
        0
      ],
      "id": "31bb2401-aaab-4af8-a480-6e90d45d5717",
      "name": "extract html",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "418644c8-dbc8-4b0f-a8e3-ede524853dae",
              "name": "final_output",
              "value": "={{ $('Loop Over Items').item.json.title }}\n\n{{ $('Loop Over Items').item.json.url }}\n\n{{ $json.output }}\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        576,
        0
      ],
      "id": "277b9557-768e-420d-9b85-88ab1f2a1f69",
      "name": "set output"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/mnt/data/{{ $('Code').item.json.sanitizedTitle }}.txt",
        "dataPropertyName": "=data",
        "options": {
          "append": false
        }
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        1248,
        272
      ],
      "id": "08f84fa1-8f94-4786-bb92-f3656f293fac",
      "name": "write to file"
    },
    {
      "parameters": {
        "operation": "toText",
        "sourceProperty": "final_output",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        1024,
        0
      ],
      "id": "2b7ff3da-76c3-46e3-972f-251843261ea3",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f79209ef-c195-4d50-86bd-403a3912d56d",
              "leftValue": "={{ $json.headers['content-type'] }}",
              "rightValue": "text/html",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -224,
        96
      ],
      "id": "4a2fc424-dc42-423b-bcb3-5aa3c094803b",
      "name": "If content type"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -224,
        288
      ],
      "id": "428ccf00-fdf0-4c15-a0d3-9ddbd4c19b21",
      "name": "status error"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        0,
        192
      ],
      "id": "3e3dc34f-eeb7-4340-b2d7-7f1c1cdc0763",
      "name": "wrong content type"
    },
    {
      "parameters": {
        "jsCode": "for (const item of items) {\n  // Access the 'title' from the 'extract html' node\n  let title = $('extract html').first().json.title;\n  \n  // Sanitize the title\n  let sanitizedTitle = title\n    .replace(/[/\\?<>\\\\:*|\"\\.\\r\\n]/g, '-') // Replaces invalid characters, including periods and newlines, with a hyphen\n    .replace(/^-+|-+$/g, ''); // Removes leading or trailing hyphens\n  \n  // Create a new property on the item with the sanitized title\n  item.json.sanitizedTitle = sanitizedTitle;\n}\n\nreturn items;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        800,
        0
      ],
      "id": "306a1967-1b0d-47d1-8bc3-4401da0e2ae1",
      "name": "Code"
    },
    {
      "parameters": {
        "options": {
          "allowFileUploads": true,
          "allowedFilesMimeTypes": "text/csv"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        -1168,
        496
      ],
      "id": "b8658b1c-52e3-4226-b82d-9dd41230a31a",
      "name": "upload file",
      "webhookId": "01cd2243-b971-471e-833a-67641f5a75fa",
      "notesInFlow": false
    },
    {
      "parameters": {
        "content": "## Click the paper clip icon in the chat to upload a csv file with urls, type start and press return to make http requests and sumamrize with Ollama save the results to text files",
        "height": 192,
        "width": 528
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1344,
        256
      ],
      "id": "3c10b6fc-352d-4b16-ba6b-63aac4679e99",
      "name": "Sticky Note"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        384,
        224
      ],
      "id": "b0f989db-d21f-408e-8c83-d65f7fa80719",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "CC6D1SBjVBR8QA99",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "temperature": 0
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        224,
        208
      ],
      "id": "f6d039ad-99be-4ebc-bbae-33a3a0d5fd02",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "znmwPMJRL7xlK8cc",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Extract from csv": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "If content type",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "status error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "set output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "extract html": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set output": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "write to file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "write to file": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "status error": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If content type": {
      "main": [
        [
          {
            "node": "extract html",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "wrong content type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "wrong content type": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "upload file": {
      "main": [
        [
          {
            "node": "Extract from csv",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "b8935204-3f73-4a92-88ac-98658f4c55f4",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ee718081dceace9a4bccc1cc08d3d8ae41f44d3a86e1399dd1a159c3f3ae7e8e"
  },
  "id": "HTVbudsADTlbsWsV",
  "tags": []
}