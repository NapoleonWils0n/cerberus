#+STARTUP: content
* coqui-ai-TTS
** resources

[[https://github.com/idiap/coqui-ai-TTS]]

[[https://coqui-tts.readthedocs.io/en/latest/]]

** nixpkgs

create the nixpkgs directory

#+begin_src sh
mkdir -p ~/.config/nixpkgs
#+end_src

create the config.nix file

#+begin_src sh
vi ~/.config/nixpkgs/config.nix
#+end_src

with this code

#+begin_src nix
{ allowUnfree = true; }
#+end_src

** nix-shell

#+begin_src sh
vi ~/nix/tts/shell.nix
#+end_src

#+begin_src nix
{ pkgs ? import <nixpkgs> {} }:

pkgs.mkShell {
  buildInputs = [ pkgs.tts ];

  shellHook = ''
    echo "Coqui TTS environment loaded.  Run 'tts --help' for usage."
  '';
}
#+end_src

** nix-shell

#+begin_src sh
nix-shell
#+end_src

** tts list models

#+begin_src sh
tts --list_models
#+end_src

** tts

tts with cuda

*** default model

#+begin_src sh
tts --use_cuda --text "coqui-ai-TTS text to speech using cuda" --out_path output.wav
#+end_src

*** vits

#+begin_src sh
tts --use_cuda --text "Good day, mate! How's the weather in London?" --model_name "tts_models/en/vctk/vits" --out_path "british_vctk_vits.wav"
#+end_src

*** glow-tts

#+begin_src sh
tts --use_cuda --text "This is glow-tts using cuda" --model_name "tts_models/uk/mai/glow-tts" --out_path "british_mai_glow_tts.wav"
#+end_src

*** xtts_v2

#+begin_src sh
tts --model_name tts_models/multilingual/multi-dataset/xtts_v2 \
--text "To be or not to be, that is the question." \
--speaker_wav /path/to/your/british_voice.wav \
--language_idx en \
--use_cuda true \
--out_path "xtts_v2_cloned_voice.wav"
#+end_src
